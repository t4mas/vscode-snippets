{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:





  //////////////////////////////////////////////////////////////////////////////////////////////////////
  // JavaScript and React:
  "Print to console": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "cl",
    "body": ["console.log($1);", "$2"],
    "description": "Log output to console"
  },

  "Console Error": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "ce",
    "body": ["console.error($1);", "$2"],
    "description": "Log error to console"
  },

  "document.querySelector": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "qs",
    "body": ["document.querySelector($1);"],
    "description": "Shortcut for document.querySelector()"
  },

  "document.querySelectorAll": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "qsa",
    "body": ["document.querySelectorAll($1);"],
    "description": "Shortcut for document.querySelectorAll()"
  },

  "document.getElementById": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "ge",
    "body": ["document.getElementById($1);"],
    "description": "Shortcut for document.getElementById()"
  },

  "Arrow": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "ar",
    "body": ["=>"],
    "description": "Write arrow"
  },

  "Num sign": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "é",
    "body": ["$"],
    "description": "Write $"
  },

  "Num sign with curlies": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "sc",
    "body": ["`${$1}`"],
    "description": "Write ${}"
  },

  "Template Literal": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "lit",
    "body": ["`${$1}`"],
    "description": "Generates template literal"
  },

  "Export Default": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "ed",
    "body": ["export default $1;"],
    "description": "Shortcut for defult exports"
  },

  "{}": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "bn",
    "body": ["{$1}"],
    "description": "Shortcut for curlies"
  },

  "[]": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "fg",
    "body": ["[$1]"],
    "description": "Shortcut for braces"
  },

  "&": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact,css,scss",
    "prefix": "c",
    "body": ["&"],
    "description": "Shortcut for &"
  },

  "&&": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "cc",
    "body": ["&&"],
    "description": "Shortcut for &&"
  },

  "|": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "v",
    "body": ["|"],
    "description": "Shortcut for |"
  },

  "||": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "vv",
    "body": ["||"],
    "description": "Shortcut for ||"
  },

  "addEventListner - click": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "evl",
    "body": ["addEventListener('click', function () {$1})"],
    "description": "Creating an addEventListener 'click' function template."
  },





  //////////////////////////////////////////////////////////////////////////////////////////////////////
  // React:
  "reactComponent": {
    "prefix": "rfc",
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "body": [
      "function ${1:${TM_FILENAME_BASE}}() {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$0",
      "\t\t</div>",
      "\t)",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}};",
      ""
    ],
    "description": "React component"
  },

  "reactStyledComponent": {
    "prefix": "rsc",
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "body": [
      "import styled from 'styled-components'",
      "",
      "const Styled${TM_FILENAME_BASE} = styled.$0``",
      "",
      "function ${TM_FILENAME_BASE}() {",
      "\treturn (",
      "\t\t<Styled${TM_FILENAME_BASE}>",
      "\t\t\t${TM_FILENAME_BASE}",
      "\t\t</Styled${TM_FILENAME_BASE}>",
      "\t)",
      "}",
      "",
      "export default ${TM_FILENAME_BASE};",
      ""
    ],
    "description": "React styled component"
  },

  "useState ": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": "sta",
    "body": ["useState$1();"],
    "description": "Create a useState hook."
  },

  "useEffect": {
    "prefix": "eff",
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "body": ["useEffect$1(function() {}, [])"],
    "description": "Create a useEffect hook"
  },

  "importCSSModule": {
    "prefix": "csm",
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "body": ["import styles from './${TM_FILENAME_BASE}.module.css'"],
    "description": "Import CSS Module as `styles`"
  },

  "import useState": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": "sti",
    "body": ["import { useState } from 'react';"],
    "description": "Importing the useState hook."
  },

  "import useEffect": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": "efi",
    "body": ["import { useEffect } from 'react';"],
    "description": "Importing the useEffect hook."
  },

  "import useRef": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": "rei",
    "body": ["import { useRef } from 'react';"],
    "description": "Importing the useRef hook."
  },





  /////////////////////////////////////////////////////////
  // HTML Tags in React:
  // "<div>content</div>": {
  //   "scope": "javascript typescript, javascriptreact, typescriptreact",
  //   "prefix": "div",
  //   "body": ["<div>$1</div>"],
  //   "description": "<div>content</div>"
  // },

  // "<p>content</p>": {
  //   "scope": "javascript typescript, javascriptreact, typescriptreact ",
  //   "prefix": "p",
  //   "body": ["<p>$1</p>"],
  //   "description": "<p>content</p>"
  // },

  // "<span>content</span>": {
  //   "scope": "javascript typescript, javascriptreact, typescriptreact ",
  //   "prefix": "span",
  //   "body": ["<span>$1</span>"],
  //   "description": "<span>content</span>"
  // },
  
  // "<h1>content</h1>": {
  //   "scope": "javascript typescript, javascriptreact, typescriptreact ",
  //   "prefix": "h1",
  //   "body": ["<h1>$1</h1>"],
  //   "description": "<h1>content</h1>"
  // },
  
  // "<h2>content</h2>": {
  //   "scope": "javascript typescript, javascriptreact, typescriptreact ",
  //   "prefix": "h2",
  //   "body": ["<h2>$1</h2>"],
  //   "description": "<h2>content</h2>"
  // },

  // "<h3>content</h3>": {
  //   "scope": "javascript typescript, javascriptreact, typescriptreact ",
  //   "prefix": "h3",
  //   "body": ["<h3>$1</h3>"],
  //   "description": "<h3>content</h3>"
  // },

  // "<h4>content</h4>": {
  //   "scope": "javascript typescript, javascriptreact, typescriptreact ",
  //   "prefix": "h4",
  //   "body": ["<h4>$1</h4>"],
  //   "description": "<h4>content</h4>"
  // },

  // "<h5>content</h5>": {
  //   "scope": "javascript typescript, javascriptreact, typescriptreact ",
  //   "prefix": "h5",
  //   "body": ["<h5>$1</h5>"],
  //   "description": "<h5>content</h5>"
  // },
  
  // "<h6>content</h6>": {
  //   "scope": "javascript typescript, javascriptreact, typescriptreact ",
  //   "prefix": "h6",
  //   "body": ["<h6>$1</h6>"],
  //   "description": "<h6>content</h6>"
  // },
  
  // "<section>content</section>": {
  //   "scope": "javascript typescript, javascriptreact, typescriptreact ",
  //   "prefix": "section",
  //   "body": ["<section>$1</section>"],
  //   "description": "<section>content</section>"
  // },

  // "<figure>content</figure>": {
  //   "scope": "javascript typescript, javascriptreact, typescriptreact ",
  //   "prefix": "figure",
  //   "body": ["<figure>$1</figure>"],
  //   "description": "<figure>content</figure>"
  // },
  
  // "<figcaption>content</figcaption>": {
  //   "scope": "javascript typescript, javascriptreact, typescriptreact ",
  //   "prefix": "figcaption",
  //   "body": ["<figcaption>$1</figcaption>"],
  //   "description": "<figcaption>content</figcaption>"
  // },
  /////////////////////////////////////////////////////////





  //////////////////////////////////////////////////////////////////////////////////////////////////////
  // HTML and React:
  "html open": {
    "scope": "html, php, javascriptreact, typescriptreact",
    "prefix": "í",
    "body": ["<"],
    "description": "html open"
  },

  "html colse": {
    "scope": "html, php, javascriptreact, typescriptreact",
    "prefix": "y",
    "body": ["/>"],
    "description": "html close"
  },

  "html tag": {
    "scope": "html, php, javascript, javascriptreact, typescriptreact ",
    "prefix": "íy",
    "body": ["<$1/>"],
    "description": "html tag"
  },





  /////////////////////////////////////////////////////////////////
  // PHP:
  "php open": {
    "scope": "php",
    "prefix": "php",
    "body": ["<?php?>"],
    "description": "php open"
  }
}
